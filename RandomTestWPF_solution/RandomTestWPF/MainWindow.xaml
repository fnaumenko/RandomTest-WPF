<Window x:Class="RandomTestWPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:local="clr-namespace:RandomTestWPF"
        mc:Ignorable="d"
        Title="Random Generator Test" Width="720" Height="532">

    <Window.Resources>
        <Style x:Key="CommonBackground">
            <Setter Property="Border.Background" Value="WhiteSmoke" />
            <Setter Property="Grid.Background" Value="WhiteSmoke" />
        </Style>

        <Style x:Key="PanelBackground">
            <Setter Property="Canvas.Background" Value="Gainsboro" />
        </Style>

        <Style TargetType="StackPanel" >
            <Setter Property="Background" Value="Gainsboro" />
        </Style>
        <Style TargetType="TabControl" >
            <Setter Property="Background" Value="Gainsboro" />
        </Style>
        <Style TargetType="Border" >
            <Setter Property="Background" Value="WhiteSmoke" />
            <Setter Property="Padding" Value="4,2,4,2"/>
        </Style>
        <Style x:Key="GridInfoPanel">
            <Setter Property="StackPanel.Orientation" Value="Horizontal" />
        </Style>
        <Style x:Key="GridInfoText">
            <Setter Property="TextBox.Margin" Value="0,0,4,0" />
        </Style>
    </Window.Resources>

    <Grid Background="WhiteSmoke">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="260" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <DockPanel Name="mainPanel" LastChildFill="True">
            <Grid DockPanel.Dock="Bottom" Height="60" Margin="4,3,2,1" ShowGridLines="False" >

                <Grid.RowDefinitions>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="112*"></ColumnDefinition>
                    <ColumnDefinition Width="25*"/>
                    <ColumnDefinition Width="117*"></ColumnDefinition>
                </Grid.ColumnDefinitions>

                <StackPanel Grid.Column="0" Grid.Row="0" Style="{StaticResource GridInfoPanel}" Grid.ColumnSpan="2" 
                        ToolTip="Number of RNG calls for one cycle">
                    <TextBlock Style="{StaticResource GridInfoText}" Text="RGN calls/cycle:"/>
                    <TextBlock x:Name="txtRngCalls" Text="0"/>
                </StackPanel>
                <StackPanel Grid.Column="2" Grid.Row="0" Style="{StaticResource GridInfoPanel}" 
                    ToolTip="X-coordinate of maximum Y-value">
                    <TextBlock Style="{StaticResource GridInfoText}" Text="Mode:" />
                    <TextBlock x:Name="txtMode" Text="0" />
                </StackPanel>

                <StackPanel Grid.Column="0" Grid.Row="1" Style="{StaticResource GridInfoPanel}" Grid.ColumnSpan="2"
                        ToolTip="Number of ticks per cycles">
                    <TextBlock Style="{StaticResource GridInfoText}" Text="Ticks/cycle:" />
                    <TextBlock x:Name="txtTickerVal" Text="0" />
                </StackPanel>
                <StackPanel Grid.Column="2" Grid.Row="1" Style="{StaticResource GridInfoPanel}"
                            ToolTip="Expectation (mean X-value)">
                    <TextBlock Style="{StaticResource GridInfoText}" Text="Mean:" />
                    <TextBlock x:Name="txtMean" Text="0" />
                </StackPanel>

                <StackPanel Grid.Column="0" Grid.Row="2" Style="{StaticResource GridInfoPanel}" Grid.ColumnSpan="2"
                        ToolTip="Total generation time in sec">
                    <TextBlock Style="{StaticResource GridInfoText}" Text="Gener. time:" />
                    <TextBlock x:Name="txtTimerVal" Text="0" />
                </StackPanel>
                <StackPanel Grid.Column="2" Grid.Row="2" Style="{StaticResource GridInfoPanel}"
                        ToolTip="Maximum X-value">
                    <TextBlock Style="{StaticResource GridInfoText}" Text="X max:" />
                    <TextBlock x:Name="txtXmax" Text="0" />
                </StackPanel>
            </Grid>

            <DockPanel DockPanel.Dock="Left" LastChildFill="True">

                <StackPanel Name="MainPanel" DockPanel.Dock="Top" Width="155">
                    <Border Padding="4,4,4,2">
                        <StackPanel >
                            <TextBlock Margin="0,1,1,0" Text="Random generator" HorizontalAlignment="Center" />
                            <ComboBox Name="cmbBoxRNG" Margin="12,1,12,5" ToolTip ="Select random gen implementation">
                                <TextBlock>Mersenne twister</TextBlock>
                                <TextBlock>c PCG (O'Nail)</TextBlock>
                                <TextBlock>C std</TextBlock>
                                <TextBlock>C XorShift</TextBlock>
                                <TextBlock>C# std</TextBlock>
                                <TextBlock>C# crypt strong</TextBlock>
                            </ComboBox>
                        </StackPanel>
                    </Border>

                    <Border>
                        <StackPanel>
                            <local:DistrParams x:Name="NormParams" Title="Norm" Padding="2" IsChecked="true" 
                                ToolTip="Based normal distribution parameters"/>
                            <StackPanel x:Name="pnlNormMethod" Orientation="Horizontal">
                                <TextBlock Margin="3,4,0,0" Text="method" />
                                <ComboBox Name="cmbBoxNormGen" Width="92" Margin="5,2,0,5" ToolTip ="Select normal distribution implementation">
                                    <TextBlock>Abramowitz</TextBlock>
                                    <TextBlock>Central limit</TextBlock>
                                    <TextBlock>Fog</TextBlock>
                                    <TextBlock>Marsaglia</TextBlock>
                                    <TextBlock>C/C# std</TextBlock>
                                </ComboBox>
                            </StackPanel>
                        </StackPanel>
                    </Border>

                    <Border>
                        <Canvas Height="45" Style="{StaticResource PanelBackground}" >
                            <local:DistrParams x:Name="LNormParams" Title="Lognorm" Padding="2" IsChecked="true"
					            Mean="5.46" IncrementMean="0.1" Sigma="0.4" IncrementSigma="0.1"
                                ToolTip="Lognormal distribution parameters"/>
                            <CheckBox x:Name="chkBoxStdLnorm" Canvas.Left="85" Canvas.Top="2" Content="C std"
                                ToolTip="Turn on/off C build-in implementation of lognormal distribution"/>
                        </Canvas>
                    </Border>

                    <Border >
                        <StackPanel>
                            <local:DistrParams x:Name="SSParams" Title="Size selection" Padding="2" Margin="0,0,0,2"
                                Sigma="20" ToolTip="Size selection normal distribution parameters"/>
                        </StackPanel>
                    </Border>

                    <Border>
                        <TabControl x:Name="tabCtrl" Height="100">
                            <TabControl.Resources>
                                <Style TargetType="{x:Type TabItem}">
                                    <Setter Property="BorderThickness" Value="0"/>
                                    <Setter Property="Padding" Value="0" />
                                    <Setter Property="HeaderTemplate">
                                        <Setter.Value>
                                            <DataTemplate>
                                                <Border x:Name="grid" Background="Silver">
                                                    <ContentPresenter>
                                                        <ContentPresenter.Content>
                                                            <TextBlock Margin="19,1" Text="{TemplateBinding Content}"/>
                                                        </ContentPresenter.Content>
                                                    </ContentPresenter>
                                                </Border>
                                                <DataTemplate.Triggers>
                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabItem}}, Path=IsSelected}" Value="True">
                                                        <Setter TargetName="grid" Property="Background" Value="Gainsboro"/>
                                                    </DataTrigger>
                                                </DataTemplate.Triggers>
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </TabControl.Resources>

                            <TabItem Header="Ranges">
                                <TabItem.Content>
                                    <StackPanel> 
                                        <local:AxisLimits x:Name="LimitsX" Title="X" Increment="10" Padding="2,4,0,3"
                                            ToolTip="X-axis autoadaption" />
                                        <local:AxisLimits x:Name="LimitsY" Title="Y" Increment="100" Padding="2,2,0,2" IsSkipped="False"
                                            ToolTip="Y-axis autoadaption" Minimum="0"/>
                                        <CheckBox x:Name="chkBoxAutoLim" Margin="3,4,0,0" IsChecked="True" Height="18"
									        Content="Auto" Checked="chkBoxAutoLim_Checked" Unchecked="chkBoxAutoLim_Unchecked"
                                            ToolTip="Turn on/off scales autoadaption"/>
                                    </StackPanel>
                                </TabItem.Content>
                            </TabItem>
                                
                            <TabItem Header="View">
                                <TabItem.Content>
                                    <StackPanel Margin="3,3,0,1" >
                                        <CheckBox x:Name="chkBoxGrid" Margin="0,3" Content="Grid" IsChecked="True" 
                                            Checked="chkBoxGrid_CheckedChanged" Unchecked="chkBoxGrid_CheckedChanged" 
                                            ToolTip="Hide/show grid"/>
                                        <CheckBox x:Name="chkBoxToolTip" Margin="0,3" Content="DataTooltip"
                                            Checked="chkBoxToolTip_Checked" Unchecked="chkBoxToolTip_Unchecked" 
                                            ToolTip="Hide/show data tooltips. Hidden tooltips speed up rendering, but are applicable to newly generated series only"/>
                                        <CheckBox x:Name="chkBoxSpline" Margin="0,3" Content="Spline"
                                            Checked="chkBoxSpline_CheckedChanged" Unchecked="chkBoxSpline_CheckedChanged" 
                                            ToolTip="Turn on/off line smoothness"/>
                                    </StackPanel>
                                </TabItem.Content>
                            </TabItem>
                        </TabControl>
                    </Border>
                </StackPanel>

                <StackPanel Name="MainButtonPanel" DockPanel.Dock="Bottom">
                    <Border Padding="4,2,4,4">
                        <StackPanel Style="{StaticResource CommonBackground}"
				            FocusManager.FocusedElement="{Binding ElementName=btnStart}">
                            <StackPanel Orientation="Horizontal" Height="20" Margin="2,5,0,4" Style="{StaticResource CommonBackground}">
                                <TextBlock Margin="8,1,3,3" Text="Cycles" />
                                <xctk:SingleUpDown x:Name="nmrCountBase" Text="5.5" Increment="0.5" Minimum="1" Maximum="8"
                                    ToolTip="Number of cycles: significand in scientific notation" />
                                <TextBlock Margin="3,1,3,3" Text="E"/>
                                <xctk:IntegerUpDown x:Name="nmrCountPower" Text="6" Minimum="0" Maximum="8" TextAlignment="Left" Width="33"
                                    ToolTip="Number of cycles: exponent in scientific notation" />
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Style="{StaticResource CommonBackground}">
                                <CheckBox x:Name="chkBoxAccum" IsChecked="True" Height="19" Margin="3,1,8,0" Content="Accum" 
                                    ToolTip="Turn on/off charts accumulation"/>
                                <CheckBox x:Name="chkBoxChart" IsChecked="True" Margin="3,1,8,0" Content="Plot" 
								    ToolTip="Turn on/off charts output"
                                    Checked="chkBoxChart_Checked" Unchecked="chkBoxChart_Unchecked" />
                            </StackPanel>
                            <Button x:Name="btnStart" Height="30" Margin="5" Content="Go!" Click="btnStart_Click"
                                ToolTip="Start generation" />
                        </StackPanel>
                    </Border>
                </StackPanel>

                <Border />

            </DockPanel>

            <ListView Name="lsViewResult" >
                <ListView.Resources>
                    <Style TargetType="{x:Type GridViewColumnHeader}">
                        <Setter Property="HorizontalContentAlignment" Value="Left" />
                    </Style>
                </ListView.Resources>
                <ListView.View >
                    <GridView x:Name="grView">
                        <GridViewColumn DisplayMemberBinding="{Binding Path=X}" Width="40">Value</GridViewColumn>
                        <GridViewColumn DisplayMemberBinding="{Binding Path=Y}" Width="38">Freq</GridViewColumn>
                    </GridView>
                </ListView.View>
            </ListView>
        </DockPanel>

        <GridSplitter Name ="splitter" Grid.Column="1" ShowsPreview="False" Width="4"
            Background="LightGray" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />

        <Grid Grid.Column="2" Name="ChartPanel" >
            <Border Padding="4">
                <Grid Background="White">
                    <TextBlock Name="ChartInfo" Text="plot area" FontSize="28" 
                        Foreground="DarkGray" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    <lvc:CartesianChart Name="Chart" Margin="5"
                        DisableAnimations="True" Visibility="Hidden" Hoverable="False" 
                        Zoom="X" Pan="X" ToolTip="Rotate mouse wheel to zoom"
                        UpdaterTick="Chart_UpdaterTick" Series="{Binding Values}" >
                        <lvc:CartesianChart.AxisX>
                            <lvc:Axis Title="value" Unit="1" RangeChanged="Axis_RangeChanged" />
                        </lvc:CartesianChart.AxisX>
                        <lvc:CartesianChart.AxisY>
                            <lvc:Axis Title="frequency" Unit="1" MinValue="0"/>
                        </lvc:CartesianChart.AxisY>
                    </lvc:CartesianChart>
                </Grid>
            </Border>
        </Grid>
    </Grid>
</Window>
